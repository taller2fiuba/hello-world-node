#!/bin/bash

# Este script va a asumir que las siguientes condiciones se cumplen
# - El servidor de desarrollo de Node está corriendo en http://localhost:27080/

# Este script va a
# - Clonar los repositorios hello-world-flask y hello-world-acceptance-tests
# - Actualizar pip e instalar las dependencias para hello-world-acceptance-tests
# - Iniciar el servidor de desarrollo de Flask
# - Esperar a que el servidor se estabilice
# - Correr las pruebas de aceptación (behave)
# - Detener el servidor de desarrollo de Node
# - Devolver el código de salida de behave.

if [ "$TRAVIS_BRANCH" != "master" ] && [ "$TRAVIS_PULL_REQUEST" != "true" ]; then
    exit 0
fi

HELLO_WORLD_FLASK_REPO="https://github.com/taller2fiuba/hello-world-flask.git"
HELLO_WORLD_ACCEPTANCE_TESTS_REPO="https://github.com/taller2fiuba/hello-world-acceptance-tests.git"

# Se va a considerar que el servidor está levantado cuando esta URL de 200 OK.
DEV_SERVER_URL="http://localhost:5000"

# Tiempo para esperar al próximo reintento de conexión, en segundos.
RETRY_TIME=1

# Ejecutables requeridos por el script
GIT=git
PIP="sudo pip"
BEHAVE=behave

TMPDIR=$(mktemp -d -t ci-XXXXXXXXXX)
cd $TMPDIR

$GIT clone "$HELLO_WORLD_FLASK_REPO"
$GIT clone "$HELLO_WORLD_ACCEPTANCE_TESTS_REPO"

$PIP install --upgrade pip
$PIP install -r hello-world-acceptance-tests/requirements.txt

./hello-world-flask/bin/dev-compose up -d

until curl -o /dev/null -s --connect-timeout 1 $DEV_SERVER_URL;
do
    echo "Esperando $RETRY_TIME seg(s) para que el server se inicie";
    sleep $RETRY_TIME;
done;

echo "Servidor de desarrollo iniciado en $DEV_SERVER_URL"

echo 'Ejecutando pruebas de aceptación'
cd hello-world-acceptance-tests

$BEHAVE
RETVAL=$?

cd ..

echo 'Deteniendo el servidor de desarrollo'
./hello-world-flask/bin/dev-compose down;

exit $RETVAL
